BEGIN;

-- Limpieza ordenada para rehacer el esquema partiendo del diagrama compartido
DROP TABLE IF EXISTS historial_estados CASCADE;
DROP TABLE IF EXISTS orden_producto     CASCADE;
DROP TABLE IF EXISTS orden_usuario      CASCADE;
DROP TABLE IF EXISTS ordenes            CASCADE;
DROP TABLE IF EXISTS producto           CASCADE;
DROP TABLE IF EXISTS tienda             CASCADE;
DROP TABLE IF EXISTS tarjeta            CASCADE;
DROP TABLE IF EXISTS usuario            CASCADE;

-- =========================
-- Tabla: usuario
-- =========================
CREATE TABLE usuario (
  id_usuario       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_usuario   VARCHAR(120) NOT NULL,
  correo           VARCHAR(255) NOT NULL UNIQUE,
  almacenado       BOOLEAN      NOT NULL DEFAULT FALSE,
  celular          VARCHAR(30),
  foto             TEXT,
  rol              VARCHAR(40)  NOT NULL DEFAULT 'cliente',
  solucion         BOOLEAN      NOT NULL DEFAULT FALSE
);

-- =========================
-- Tabla: tarjeta
-- =========================
CREATE TABLE tarjeta (
  numero_tarjeta      BIGINT PRIMARY KEY,
  vencimiento_tarjeta DATE        NOT NULL,
  csv                 SMALLINT    NOT NULL CHECK (csv BETWEEN 0 AND 999),
  foto                TEXT,
  titular_usuario     INTEGER     NOT NULL REFERENCES usuario(id_usuario) ON DELETE CASCADE
);

-- =========================
-- Tabla: tienda
-- =========================
CREATE TABLE tienda (
  id_tienda     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_origen VARCHAR(150) NOT NULL,
  logo          TEXT,
  cantidad      INTEGER      NOT NULL DEFAULT 0
);

-- =========================
-- Tabla: producto
-- =========================
CREATE TABLE producto (
  id_producto   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tienda_id     INTEGER     NOT NULL REFERENCES tienda(id_tienda) ON DELETE CASCADE,
  nombre_origen VARCHAR(160) NOT NULL,
  descripcion   TEXT,
  foto          TEXT,
  precio        NUMERIC(10,2) NOT NULL CHECK (precio >= 0)
);

-- =========================
-- Tabla: ordenes
-- =========================
CREATE TABLE ordenes (
  id_orden        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tracking        VARCHAR(60)  NOT NULL UNIQUE,
  fecha           DATE         NOT NULL,
  hora            TIME         NOT NULL,
  estado_actual   VARCHAR(60)  NOT NULL,
  solucion        BOOLEAN      NOT NULL DEFAULT FALSE,
  en_edificio     BOOLEAN      NOT NULL DEFAULT FALSE,
  referencia      TEXT,
  tienda_id       INTEGER      NOT NULL REFERENCES tienda(id_tienda)   ON DELETE CASCADE,
  tarjeta_numero  BIGINT           REFERENCES tarjeta(numero_tarjeta) ON DELETE SET NULL
);

-- =========================
-- Tabla: orden_usuario
-- =========================
CREATE TABLE orden_usuario (
  id_orden_usuario INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  orden_id         INTEGER NOT NULL REFERENCES ordenes(id_orden)  ON DELETE CASCADE,
  usuario_id       INTEGER NOT NULL REFERENCES usuario(id_usuario) ON DELETE CASCADE,
  solucion         BOOLEAN NOT NULL DEFAULT FALSE,
  CONSTRAINT uq_orden_usuario UNIQUE (orden_id, usuario_id)
);

-- =========================
-- Tabla: orden_producto
-- =========================
CREATE TABLE orden_producto (
  id_orden_producto INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  orden_id          INTEGER NOT NULL REFERENCES ordenes(id_orden)    ON DELETE CASCADE,
  producto_id       INTEGER NOT NULL REFERENCES producto(id_producto) ON DELETE CASCADE,
  cantidad          INTEGER NOT NULL CHECK (cantidad > 0)
);

-- =========================
-- Tabla: historial_estados
-- =========================
CREATE TABLE historial_estados (
  id_historial  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  orden_id      INTEGER    NOT NULL REFERENCES ordenes(id_orden) ON DELETE CASCADE,
  estado        VARCHAR(60) NOT NULL,
  comentarios   TEXT,
  hora          TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- =========================
-- Datos de prueba usando la estructura del diagrama UML
-- =========================

-- Usuarios
INSERT INTO usuario (id_usuario, nombre_usuario, correo, almacenado, celular, rol, solucion)
VALUES
  (1, 'Courier UFOOD', '00000001@aloe.ulima.edu.pe', FALSE, '999-999-999', 'courier', FALSE),
  (2, 'Cliente Demo',  '00000002@aloe.ulima.edu.pe', TRUE,  '988-888-888', 'cliente', TRUE);
ALTER SEQUENCE usuario_id_usuario_seq RESTART WITH 3;

-- Tarjetas
INSERT INTO tarjeta (numero_tarjeta, vencimiento_tarjeta, csv, foto, titular_usuario)
VALUES
  (4111111111111111, DATE '2027-01-01', 123, 'https://images.ufood.app/cards/visa.png', 2);

-- Tiendas
INSERT INTO tienda (id_tienda, nombre_origen, logo, cantidad)
VALUES
  (1, 'Bembos',        'https://images.ufood.app/bembos-logo.png',        12),
  (2, 'La Nevera Fit', 'https://images.ufood.app/neverafit-logo.png',     8),
  (3, 'Mr. Sushi',     'https://images.ufood.app/mr-sushi-logo.png',     15);
ALTER SEQUENCE tienda_id_tienda_seq RESTART WITH 4;

-- Productos
INSERT INTO producto (id_producto, tienda_id, nombre_origen, descripcion, foto, precio)
VALUES
  (1, 1, 'Nuggets',              'Nuggets de pollo crujientes.',         'https://images.ufood.app/nuggets.jpg',          18.00),
  (2, 1, 'Hamburguesa Extrema',  'Doble carne y queso Edam.',            'https://images.ufood.app/hamburguesa-extrema.jpg', 20.90),
  (3, 2, 'Açai Bowl',            'Con granola, plátano, fresas y arándanos.', 'https://images.ufood.app/acai.jpg',        25.00),
  (4, 2, 'Tostadas con Palta',   'Pan integral con palta y semillas.',   'https://images.ufood.app/tostadas.jpg',        15.00),
  (5, 3, 'Acevichado Maki',      'Roll de langostino y pesca del día.',  'https://images.ufood.app/acevichado.jpg',      28.00),
  (6, 3, 'Poke Atún Fresco',     'Base de arroz sushi y cubos de atún.', 'https://images.ufood.app/poke.jpg',            29.90);
ALTER SEQUENCE producto_id_producto_seq RESTART WITH 7;

-- Órdenes
INSERT INTO ordenes (id_orden, tracking, fecha, hora, estado_actual, solucion, en_edificio, referencia, tienda_id, tarjeta_numero)
VALUES
  (1, 'trk_20240501001', DATE '2024-05-15', TIME '12:30', 'pending',   FALSE, TRUE,  'Av. Javier Prado 123, torre A, dpto. 502', 1, 4111111111111111),
  (2, 'trk_20240501002', DATE '2024-05-16', TIME '20:00', 'delivered', TRUE,  FALSE, 'Calle Los Álamos 456, casa 7',             3, 4111111111111111);
ALTER SEQUENCE ordenes_id_orden_seq RESTART WITH 3;

-- Relación usuario - orden
INSERT INTO orden_usuario (id_orden_usuario, orden_id, usuario_id, solucion)
VALUES
  (1, 1, 2, TRUE),  -- Cliente propietario
  (2, 1, 1, FALSE), -- Courier asignado
  (3, 2, 2, TRUE),
  (4, 2, 1, TRUE);
ALTER SEQUENCE orden_usuario_id_orden_usuario_seq RESTART WITH 5;

-- Productos por orden
INSERT INTO orden_producto (id_orden_producto, orden_id, producto_id, cantidad)
VALUES
  (1, 1, 1, 1),
  (2, 1, 2, 1),
  (3, 2, 5, 1),
  (4, 2, 6, 1);
ALTER SEQUENCE orden_producto_id_orden_producto_seq RESTART WITH 5;

-- Historial de estados
INSERT INTO historial_estados (id_historial, orden_id, estado, comentarios, hora)
VALUES
  (1, 1, 'pending',   'Orden creada por el cliente.',        '2024-05-15 12:30:00'),
  (2, 1, 'accepted',  'Courier aceptó la orden.',            '2024-05-15 12:40:00'),
  (3, 1, 'delivering','Courier en camino al cliente.',       '2024-05-15 13:05:00'),
  (4, 1, 'delivered', 'Orden entregada satisfactoriamente.', '2024-05-15 13:25:00'),
  (5, 2, 'pending',   'Orden creada por el cliente.',        '2024-05-16 19:00:00'),
  (6, 2, 'accepted',  'Tienda confirmó la preparación.',     '2024-05-16 19:10:00'),
  (7, 2, 'delivering','Courier recogió la orden.',           '2024-05-16 19:35:00'),
  (8, 2, 'delivered', 'Cliente confirmó la recepción.',      '2024-05-16 20:05:00');
ALTER SEQUENCE historial_estados_id_historial_seq RESTART WITH 9;

COMMIT;
